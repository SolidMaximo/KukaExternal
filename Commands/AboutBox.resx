<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>